/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package developertools;

import common.interfaces.ProcessorRequest;
import connection.tcp.IncomingConnectionsHandler;
import connection.udp.SetupUDP;
import execute.Server;
import execute.SimpleProcessorRequest;
import helpers.ServerState;
import helpers.User;
import helpers.UserArray;
import java.util.HashMap;
import java.util.Map;
import java.util.Map.Entry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import trafficrouting.TransportNode;

/**
 *
 * @author James
 */
public class Console extends javax.swing.JFrame
{
    SetupUDP udpCaster;
    Map<Integer, TransportNode> nodes;
    Map<String, Integer> nameStopRelation = new HashMap<>();

    public Console()
    {
        udpCaster = new SetupUDP();
        initComponents();
        potentialUsers.setModel(new DefaultListModel<>());

        try
        {
            IncomingConnectionsHandler incomingTCP = new IncomingConnectionsHandler();
            SimpleProcessorRequest incomingTCPProcess = new SimpleProcessorRequest(incomingTCP);
            Server.serverThreadPool.schedule(incomingTCPProcess);

            Server.trafficGraph = Server.serverTransmitter.getTrafficGraph();
            nodes = Server.trafficGraph.getNodes();
            createDropDownBox();
            
            Server.serverThreadPool.schedule(new ProcessorRequest()
            {

                @Override
                public void process()
                {
                    while (true)
                    {
                        updateTables();
                        try
                        {
                            Thread.sleep(Server.serverTransmitter.getDelay() / 4);
                        } catch (InterruptedException ex)
                        {
                            Logger.getLogger(Console.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }
            });

        } catch (Exception ex)
        {
        }
    }

    private void updateTables()
    {
        potentialUsers.setModel(createModel(Server.potentialUsers));
        activeUsers.setModel(createModel(Server.activeUsers));
        repaint();
    }

    private DefaultListModel<String> createModel(UserArray array)
    {
        DefaultListModel<String> model = new DefaultListModel<>();

        if (array.getArraySize() == 0)
        {
            model.addElement("-Empty-");
        } else
        {
            for (Map.Entry<Integer, User> entries : array.getUserEntrySet())
            {
                Integer key = entries.getKey();
                User value = entries.getValue();

                model.addElement("User: " + value.ID);
            }
        }
        return model;
    }
    
    private void createDropDownBox()
    {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel();
        for (Entry<Integer, TransportNode> nodeSet : nodes.entrySet())
        {
            Integer key = nodeSet.getKey();
            TransportNode value = nodeSet.getValue();
            model.addElement(value.identity);
            
            nameStopRelation.put(value.identity, key);
        }
        stationDropDown.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        potentialUsers = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        activeUsers = new javax.swing.JList();
        btn_arriveAtStation = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        field_serverState = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        btn_leaveStation = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        stationDropDown = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        potentialUsers.setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(potentialUsers);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 174, 290));

        activeUsers.setModel(new javax.swing.AbstractListModel()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(activeUsers);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, 184, 290));

        btn_arriveAtStation.setText("Arrive At Station");
        btn_arriveAtStation.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_arriveAtStationActionPerformed(evt);
            }
        });
        getContentPane().add(btn_arriveAtStation, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, -1, -1));

        jLabel1.setText("Potential Users:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        jLabel2.setText("Active Users:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, -1, -1));
        getContentPane().add(field_serverState, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 150, 25));

        jLabel4.setText("Train Server state:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        btn_leaveStation.setText("Leave Station");
        btn_leaveStation.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_leaveStationActionPerformed(evt);
            }
        });
        getContentPane().add(btn_leaveStation, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 130, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("GPS");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, -1, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("SERVER");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, -1, -1));

        stationDropDown.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        stationDropDown.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                stationDropDownActionPerformed(evt);
            }
        });
        getContentPane().add(stationDropDown, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 170, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_arriveAtStationActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btn_arriveAtStationActionPerformed
    {//GEN-HEADEREND:event_btn_arriveAtStationActionPerformed
        Server.state.currentStop = nodes.get(nameStopRelation.get((String)stationDropDown.getSelectedItem()));
        System.out.println("Stop: " + Server.state.currentStop.identity);
        udpCaster.getGPS().setState(ServerState.State.arrivedAtStation);
        field_serverState.setText(Server.state.currentState.name());
        
        Server.serverThreadPool.schedule(new ProcessorRequest()
        {

            @Override
            public void process()
            {
                udpCaster.getGPS().transmit();
            }
        });
    }//GEN-LAST:event_btn_arriveAtStationActionPerformed

    private void btn_leaveStationActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btn_leaveStationActionPerformed
    {//GEN-HEADEREND:event_btn_leaveStationActionPerformed
        udpCaster.getGPS().setState(ServerState.State.leftStation);
        field_serverState.setText(Server.state.currentState.name());
        
        Server.serverThreadPool.schedule(new ProcessorRequest()
        {

            @Override
            public void process()
            {
                udpCaster.getGPS().transmit();
            }
        });
    }//GEN-LAST:event_btn_leaveStationActionPerformed

    private void stationDropDownActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_stationDropDownActionPerformed
    {//GEN-HEADEREND:event_stationDropDownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stationDropDownActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Console.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Console().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList activeUsers;
    private javax.swing.JButton btn_arriveAtStation;
    private javax.swing.JButton btn_leaveStation;
    private javax.swing.JTextField field_serverState;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList potentialUsers;
    private javax.swing.JComboBox stationDropDown;
    // End of variables declaration//GEN-END:variables
}
